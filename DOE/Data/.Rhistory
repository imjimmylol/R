nrow()
#load data
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age  & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
df
library(hash)
magic = function(df){
res = hash()
p = sum(df$DIED=="Y")/(length(df$DIED))
n = df %>% nrow()
q = 1-p
res[["n_obs"]] = n
res[["mean"]] = n*p
res[["std"]] = n*p*q
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
coln = age_iter
rown = pain_iter
matrix(c(cell_mean[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age %>% as.factor()
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
df_ijk_trans(df,"15_35","四肢痛", "MODERNA")
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == as.character(age) & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
df_ijk_trans(df,"15_35","四肢痛", "MODERNA")
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == as.character(age) & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
df_ijk_trans(df,"15_35","四肢痛", "MODERNA")
qq = c("15_35","四肢痛", "MODERNA")
df %>% filter(age == as.character(qq[1]) & Pain_type == qq[2] & VAX_MANU==qq[3])
#load data
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age  & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
df
library(hash)
magic = function(df){
res = hash()
p = sum(df$DIED=="Y")/(length(df$DIED))
n = df %>% nrow()
q = 1-p
res[["n_obs"]] = n
res[["mean"]] = n*p
res[["std"]] = n*p*q
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
i = as.character(i)
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
coln = age_iter
rown = pain_iter
matrix(c(cell_mean[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == as.character(age) & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
qq = c("15_35","四肢痛", "MODERNA")
df_ijk_trans(df, qq[1]), qq[2], qq[3])
df_ijk_trans(df, qq[1], qq[2], qq[3])
df_ijk_trans(df, qq[1], qq[2], qq[3])
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = as.character(age)
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == as.character(age) & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
qq = c("15_35","四肢痛", "MODERNA")
df_ijk_trans(df, qq[1], qq[2], qq[3])
df %>% filter(age = df[1], pain = df[2], vax = df[3])
df %>% filter(age = qq[1], pain = qq[2], vax = qq[3])
df %>% filter(age == qq[1]& pain = qq[2]& vax = qq[3])
df %>% filter(age == qq[1]& pain == qq[2]& vax == qq[3])
df %>% filter(age == qq[1]& Pain_type == qq[2]& vax == qq[3])
df %>% filter(age == qq[1]& Pain_type == qq[2]& VAX_MANU == qq[3])
df_ijk_trans(df, qq[1], qq[2], qq[3])
df_ijk_trans_test  = function(df, age, pain, vax){
index = which(df$age == age & df$Pain_type == pain & df$VAX_MANU == vax)
return(df_res[index,])
}
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = as.character(age)
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == as.character(age) & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
df_ijk_trans_test  = function(df, age, pain, vax){
index = which(df$age == age & df$Pain_type == pain & df$VAX_MANU == vax)
return(df_res[index,])
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
qq = c("15_35","四肢痛", "MODERNA")
df_ijk_trans_test(df, qq[1], qq[2], qq[3])
df_ijk_trans_test  = function(df, age, pain, vax){
index = which(df$age == age & df$Pain_type == pain & df$VAX_MANU == vax)
return(df[index,])
}
df_ijk_trans_test(df, qq[1], qq[2], qq[3])
#load data
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15_35")
}
else if(35<i & i<=55){
age = append(age, "35_55")
}
else if(55<i & i<=75){
age = append(age, "55_75")
}
else{
age = append(age, "75_95")
}
}
df$age = age
df_ijk_trans = function(df, age, pain, vax){
index = which(df$age == age & df$Pain_type == pain & df$VAX_MANU == vax)
return(df[index,])
}
age_iter = c("15_35", "35_55", "55_75", "75_95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
df
library(hash)
magic = function(df){
res = hash()
p = sum(df$DIED=="Y")/(length(df$DIED))
n = df %>% nrow()
q = 1-p
res[["n_obs"]] = n
res[["mean"]] = n*p
res[["std"]] = n*p*q
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
i = as.character(i)
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
coln = age_iter
rown = pain_iter
matrix(c(cell_mean[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_mean[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_mean[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(cell_std[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
