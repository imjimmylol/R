}
}
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
#print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
View(df)
df = df %>% filter(Pain_type!="其他痛")
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
#print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15~35")
}
else if(35<i & i<=55){
age = append(age, "35~55")
}
else if(55<i & i<=75){
age = append(age, "55~75")
}
else{
age = append(age, "75~95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15~35", "35~55", "55~75", "75~95")
pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
#print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
age_iter = c("15~35", "35~55", "55~75", "75~95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
#print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
View(df)
# calculate cell mean####
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
4*3*3
# calculate cell mean####
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
print(c(i,j,k))
print("====================")
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
print(c(i,j,k))
}
}
}
}
View(df)
df$DIED
whihc(df$DIED)=="Y"
which(df$DIED)=="Y"
which(df$DIED=="Y")
magic = function(df){
res = hash()
res[["n_obs"]]  = df %>% nrow()
res[["mean"]] = sum(which(df$DIED=="Y"))/(length(df$DIED))
res[["std"]] = n_obs*mean*(1-mean)
}
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15~35")
}
else if(35<i & i<=55){
age = append(age, "35~55")
}
else if(55<i & i<=75){
age = append(age, "55~75")
}
else{
age = append(age, "75~95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15~35", "35~55", "55~75", "75~95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
# calculate cell mean####
library(hash)
magic = function(df){
res = hash()
res[["n_obs"]]  = df %>% nrow()
res[["mean"]] = sum(which(df$DIED=="Y"))/(length(df$DIED))
res[["std"]] = n_obs*mean*(1-mean)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15~35")
}
else if(35<i & i<=55){
age = append(age, "35~55")
}
else if(55<i & i<=75){
age = append(age, "55~75")
}
else{
age = append(age, "75~95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15~35", "35~55", "55~75", "75~95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
# calculate cell mean####
library(hash)
magic = function(df){
res = hash()
res[["n_obs"]]  = df %>% nrow()
res[["mean"]] = sum(which(df$DIED=="Y"))/(length(df$DIED))
mean = sum(which(df$DIED=="Y"))/(length(df$DIED))
res[["std"]] = n_obs*mean*(1-mean)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
# calculate cell mean####
library(hash)
magic = function(df){
res = hash()
res[["n_obs"]]  = df %>% nrow()
res[["mean"]] = sum(which(df$DIED=="Y"))/(length(df$DIED))
mean = sum(which(df$DIED=="Y"))/(length(df$DIED))
res[["std"]] = n_obs*mean*(1-mean)
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
View(tmp)
n_obs
cell_mean
cell_std
which(df$DIED=="Y")
sum(which(df$DIED=="Y"))
length(df$DIED
(length(df$DIED))
sad
length(df$DIED)
df$DIED=="Y")
df$DIED=="Y")
df$DIED=="Y"
sum(df$DIED=="Y")
library(hash)
magic = function(df){
res = hash()
p = sum(df$DIED=="Y")/(length(df$DIED))
n = df %>% nrow()
q = 1-p
res[["n_obs"]] = n
res[["mean"]] = n*p
res[["std"]] = n*p*q
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
n_obs
cell_mean
cell_std
rown = age_iter
coln = pain_iter
matrix(n_obs, nrow = 4, byrow = TRUE,
dimnames = list(rown, coln))
age_iter
matrix(n_obs, nrow = 4, ncol = 3,byrow = TRUE,
dimnames = list(rown, coln))
rown = age_iter
coln = pain_iter
matrix(n_obs, nrow = 3, ncol = 4,byrow = TRUE,
dimnames = list(rown, coln))
age_iter
n_obs
matrix(n_obs, nrow  = 4, ncol = 3,byrow = TRUE,
dimnames = list(coln, rown))
matrix(n_obs, nrow  = 4, ncol = 3,byrow = TRUE,
dimnames = list(rown, coln))
n_obs
n_obs[1:12]
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE,
dimnames = list(rown, coln))
n_obs[1:12]
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE, )
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE)
x <- c(5:16)
# defining row names and column names
rown <- c("row_1", "row_2", "row_3")
coln <- c("col_1", "col_2", "col_3", "col_4")
# creating matrix
m <- matrix(x, nrow = 3, byrow = TRUE,
dimnames = list(rown, coln))
# print matrix
print(m)
c(5:16)
n_obs[1:12]
age_iter
pain_iter
# creating matrix
m <- matrix(x, nrow = 3, byrow = TRUE, )
# print matrix
print(m)
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE)
n_obs[1:12]
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE)
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE)
n_obs[1:12] %>% class()
x %>% class()
n_obs[1:12]
x <- c(197, 188, 105, 197, 188, 105, 197, 188, 105, 197, 188, 105)
# defining row names and column names
rown <- c("row_1", "row_2", "row_3")
coln <- c("col_1", "col_2", "col_3", "col_4")
# creating matrix
m <- matrix(x, nrow = 3, byrow = TRUE, )
# print matrix
print(m)
######
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
n_obs = df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()
# print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
# print(c(i,j,k))
# print("====================")
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
# print(c(i,j,k))
}
}
}
}
# print matrix
print(m)
# read data####
setwd("C:/Users/user/Desktop/R/DOE/Data")
library(readr)
library(dplyr)
library(ggplot2)
df = as_tibble(read.csv("covid_data_pain.csv", encoding = "CP950"))
df = df[c(1,2,8:10)]
# wash data####
summary(df$AGE_YRS)
age = c()
for(i in df$AGE_YRS){
if(15<i & i<=35){
age = append(age, "15~35")
}
else if(35<i & i<=55){
age = append(age, "35~55")
}
else if(55<i & i<=75){
age = append(age, "55~75")
}
else{
age = append(age, "75~95")
}
}
df$age = age
df_ijk_trans  = function(df, age, pain, vax){
df_res = df %>% filter(age == age & Pain_type == pain & VAX_MANU==vax)
return(df_res)
}
age_iter = c("15~35", "35~55", "55~75", "75~95")
# pain_iter = c("四肢痛", "其他痛", "頭頸痛", "軀幹痛")
pain_iter = c("四肢痛", "頭頸痛", "軀幹痛")
vax_iter = c("MODERNA", "PFIZER\\BIONTECH", "JANSSEN")
df = df %>% filter(Pain_type!="其他痛")
# calculate cell mean####
library(hash)
magic = function(df){
res = hash()
p = sum(df$DIED=="Y")/(length(df$DIED))
n = df %>% nrow()
q = 1-p
res[["n_obs"]] = n
res[["mean"]] = n*p
res[["std"]] = n*p*q
return(res)
}
n_obs =  c()
cell_mean = c()
cell_std = c()
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
tmp = magic(df_ijk_trans(df, age = i,pain = j, vax = k))
n_obs = append(n_obs, tmp$n_obs)
cell_mean = append(cell_mean, tmp$mean)
cell_std = append(cell_std, tmp$std)
}
}
}
coln = age_iter
rown = pain_iter
matrix(n_obs[1:12], nrow  = 4, ncol = 3,byrow = TRUE)
n_obs
n_obs[1:12]
c(n_obs[1:12])
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE)
n_obs[1:12]
n_obs[1:12][0]
n_obs[1:12][1]
class(n_obs[1:12][1])
matrix(n_obs[1:12]%>%as.numeric(), nrow  = 4, ncol = 3,byrow = TRUE)
x <- n_obs[1:12]
matrix(x, nrow  = 4, ncol = 3,byrow = TRUE)
c(197, 188, 105, 197, 188, 105, 197, 188, 105, 197, 188, 105)
n_obs
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
# print(c(i,j,k))
# print("====================")
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
# print(c(i,j,k))
}
}
}
}
######
for(k in vax_iter){
for(i in age_iter){
for(j in pain_iter){
print(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow())
print(c(i,j,k))
print("====================")
if(df_ijk_trans(df, age = i,pain = j, vax = k) %>% nrow()==0){
# print(c(i,j,k))
}
}
}
}
# "MODERNA"
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "PFIZER\\BIONTECH"
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "JANSSEN"
matrix(c(n_obs[24:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[24:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[24:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "JANSSEN"
matrix(c(n_obs[25:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "JANSSEN"
matrix(c(n_obs[25:]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "PFIZER\\BIONTECH"
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "JANSSEN"
matrix(c(n_obs[25:36]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:36]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:36]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
# "MODERNA"
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(rown, coln))
rown
# "MODERNA"
matrix(c(n_obs[1:12]), nrow  = 4, ncol = 3,byrow = TRUE,dimnames = list(coln, rown))
# "MODERNA"
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[1:12]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
# "PFIZER\\BIONTECH"
matrix(c(n_obs[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[13:24]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
# "JANSSEN"
matrix(c(n_obs[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
matrix(c(n_obs[25:36]), nrow  = 3, ncol = 4,byrow = TRUE,dimnames = list(rown, coln))
